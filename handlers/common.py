from aiogram import types, Router, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.state import StatesGroup, State
from handlers.competition import cmd_tasks, cmd_submit
from handlers.leaderboard import cmd_leaderboard

router = Router()

def get_keyboard() -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    return ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="üìù –ú–µ–Ω—é"), 
                KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")
            ]
        ],
        resize_keyboard=True
    )

def get_inline_menu() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç inline-–º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üìù –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á", callback_data="show_tasks"),
                InlineKeyboardButton(text="üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ", callback_data="show_submit")
            ],
            [
                InlineKeyboardButton(text="üìä –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤", callback_data="show_leaderboard"),
                InlineKeyboardButton(text="üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞", callback_data="show_hint")
            ]
        ]
    )

@router.message(F.text == "üìù –ú–µ–Ω—é")
@router.message(Command("menu"))
async def show_menu(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_inline_menu())

@router.message(F.text == "‚ùì –ü–æ–º–æ—â—å")
@router.message(Command("help"))
async def cmd_help(message: types.Message):
    help_text = """
üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>

/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/register - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/tasks - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–¥–∞—á
/submit - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
/leaderboard - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤

<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:</b>
1. –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /register
2. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ /tasks
3. –í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞—á—É –∏ –∏–∑—É—á–∏—Ç–µ –µ—ë —É—Å–ª–æ–≤–∏–µ
4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–µ—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ /submit
5. –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–≤–æ–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –≤ /leaderboard

–ó–∞ –∫–∞–∂–¥—É—é —Ä–µ—à—ë–Ω–Ω—É—é –∑–∞–¥–∞—á—É –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –æ—á–∫–∏! üèÜ
"""
    await message.answer(help_text, reply_markup=get_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–∫–Ω–æ–ø–æ–∫
@router.callback_query(F.data == "show_tasks")
async def show_tasks_callback(callback: types.CallbackQuery):
    await callback.message.delete()
    await cmd_tasks(callback.message)
    await callback.answer()

@router.callback_query(F.data == "show_submit")
async def show_submit_callback(callback: types.CallbackQuery):
    await callback.message.delete()
    await cmd_submit(callback.message)
    await callback.answer()

@router.callback_query(F.data == "show_leaderboard")
async def show_leaderboard_callback(callback: types.CallbackQuery):
    await callback.message.delete()
    await cmd_leaderboard(callback.message)
    await callback.answer()

@router.callback_query(F.data == "show_hint")
async def show_hint_callback(callback: types.CallbackQuery):
    await callback.message.delete()
    await callback.message.answer(
        "üí° –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /hint –∏ –æ–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: /hint –ö–∞–∫ –Ω–∞–π—Ç–∏ —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞?"
    )
    await callback.answer()

def register_handlers_common(dp):
    dp.include_router(router) 